@page "{eventID:long?}"
@using LetsGame.Data.Models;
@using LetsGame.Areas.Identity.Data;
@using LetsGame.Areas.Hub.Models;
@using LetsGame.Areas.Hub.Models.Controls;
@using System.Globalization;
@model LetsGame.Areas.Hub.Pages.EventModel
@{
	ViewData["Title"] = @Model.EventName;
}

<div class="row pt-1 pb-3">
	<h1 class="col">@Model.EventName</h1>
</div>
<partial name="_StatusMessage" model="Model.StatusMessage" />


<!--A partial for rendering a list of events consitantly-->
@if (!Model.PageData.IsValid) {
	//this model is not valid when there is neither a single event nor event list to display
	//In this case we will notify the user that they have no Events and offer them the option to create a new event
	<div>
		Uh-oh, looks like you haven't made any events. Click the add event button to get started.
	</div>
	<partial name="Controls/_UpdateEvent" model="@new EventButtonModel(null, Model.PageData.SourceURL)" />
}
else if (Model.PageData.RenderType == EventPageRenderType.SINGLE) {

	//the event that we will display
	LetsGame_UserEvent ue = Model.PageData.SingleData.UserEvent;

	@if (ue != null) {
		<partial name="_SingleEvent" model="@Model.PageData.SingleData" />
	}
}
else {
	if (Model.PageData.HasPinnedEvents) {
		<div id="pinned-events" class="row py-3">
			<partial name="_PinnedEvents" model="Model.PageData.PinnedEvents" />
		</div>
	}
	
	<partial name="_EventList" model="@Model.PageData.EventListData" />
}


@{
	//be inspired by github ui
}