@using LetsGame.Data.Models;
@using LetsGame.Services;
@using LetsGame.Areas.Identity.Data;
@using LetsGame.Areas.Hub.Models;
@using LetsGame.Areas.Hub.Models.Controls;
@using System.Globalization;
@model _SingleEventModel

<!---Display Date/Time Left-->
<div class="row">
	<div class="col d-flex justify-content-between">
		<h4>@Model.EventDate at @Model.EventTime</h4>
		<h4 class="lead text-muted">Time until event: @Model.TimeToEvent</h4>
	</div>
</div>
<!---Display Controls-->
<div class="row">
	<div class="d-flex justify-content-between">
		<div class="d-flex justify-content-end flex-grow-1">
			<div class="me-1">
				<partial name="Controls/_PinEvent" model="@new PinEventButtonModel(Model.UserEvent.IsPinned, Model.Event.ID, Model.CurrentPage)"/>
			</div>
			@if (Model.UserEvent.IsCreator){
				<div class="me-1">
					<partial name="Controls/_DeleteEvent" model="@new EventButtonModel(Model.Event.ID, Model.CurrentPage, ControlType.BUTTON)"/>
				</div>
				<div class="me-1">
					<partial name="Controls/_UpdateEvent" model="@new EventButtonModel(Model.Event.ID, Model.CurrentPage, ControlType.BUTTON)"/>
				</div>
			}
		</div>
	</div>
</div>
<!---Display Description-->
<div class="row">
	<div class="col">
		<p>@Model.Event.Description</p>
	</div>
</div>
<!---Display Poll-->

@if (Model.HasPoll)
{
	<div id="event-poll" class="row mx-0 my-4">
		<partial name="_Poll" model="@new _PollModel(Model.CurrentPage, Model.Poll, Model.UserVote, Model.UserEvent.IsCreator)"/>
	</div>
}
else {
	<div class="row mx-0 my-4">
		<div class="col flex-column">
			<div class="d-flex border border-primary rounded-2 justify-content-center align-items-center" style="height:18vh;">
				<div>
					<form method="post" asp-area="Hub" asp-page="/Events/Index" asp-page-handler="AddPoll" asp-route-eventID="@Model.Event.ID" asp-route-returnUrl="@Model.CurrentPage">
						<button class="btn btn-outline-primary" type="submit">Add New Poll</button>
					</form>
				</div>
			</div>
		</div>
	</div>
}
<!---Display Participants-->
<div class="row">
	<div class="col">
		<div class="d-flex justify-content-start">
			<div class="lead text-muted pe-2">
				<strong>Creator:</strong> <span class="text-primary">@Model.Event.UserEvents.Single(ue => ue.IsCreator).User.UserName</span>
			</div>
			@if (Model.Event.UserEvents.Count > 1) {
				<div class="lead text-muted pe-2">
					<strong>Particiants:</strong>
				</div>
			}

			@foreach(LetsGame_UserEvent ue in Model.Event.UserEvents) {
				if (!ue.IsCreator)
				{
					<div class="lead text-muted pe-2">@ue.User.UserName</div>
				}
			}
		</div>
		<form id="page-form" type="post" asp-area="Hub" asp-page="Events/Index">
			<input id="selection" list="users" onkeyup="displayFriends(this.value, @Model.Event.ID)">
			<input id="id-value" type="hidden" name="friendID" />
			<input type="hidden" name="eventID" value="@Model.Event.ID" />
			<div id="search-results">
				<partial name="_UserSearchResults" model="@new List<FriendData>()" />
			</div>
			<button type="submit" onclick="submitEventInvite()" asp-page-handler="EventInvite" class="btn btn-danger">Add Friend</button>
		</form>
		<form type="post" asp-area="Hub" asp-page="Events/Index" asp-route-eventID="@Model.Event.ID">
			<button type="submit" asp-page-handler="LeaveEvent" class="btn btn-danger">Leave Event</button>
		</form>
	</div>
</div>

