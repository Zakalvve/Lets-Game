@using LetsGame.Data.Models;
@using LetsGame.Areas.Identity.Data;
@using LetsGame.Areas.Hub.Models;
@using System.Globalization;
@model Model_UserEventsData

<!--A partial for rendering a list of events consitantly-->
@if (!Model.IsValid)
{
	//this model is not valid when there is neither a single event nor event list to display
	//In this case we will notify the user that they have no Events and offer them the option to create a new event
	<div>
		Uh-oh, looks like you haven't made any events. Click the add event button to get started.
	</div>
	<partial name="Controls/_UpdateEvent" model="@new ControlModel_EventData(null, Model.SourceURL)" />
}
else if (Model.IsSingle && Model.DisplaySingles) {
			
	//the event that we will display
	LetsGame_UserEvent ue = Model.GetSingle();

	@if (ue != null){
		<partial name="_SingleEvent" model="new PartialModel_SingleEvent(ue, Model.SourceURL)"/>
	}
}
else {
	if (Model.HasPinnedEvents)
	{
		<partial name="_PinnedEvents" model="Model.PinnedEvents"/>
	}
	<partial name="_EventList" model="new PartialModel_EventList(Model.UserEvents, Model.SourceURL)"/>	
}